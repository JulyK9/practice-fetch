{"ast":null,"code":"var _jsxFileName = \"/Users/jkkim/Documents/Hello-JK-World/practice-fetch/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\"; // 서버에 데이터 요청\n// fetch 기본 제공 api\n// axios 라이브러리 사용\n// 서버주소를 알아야 함\n// 어떤 http method를 사용할지 알아야 됨\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // 받은 데이터를 화면에 렌더하기 위한 작업\n  const [todoList, setTodoList] = useState(null); // 컴포넌트가 최초 렌더링 될 때만 실행될 수 있도록 함 (데이터 fetch 반복으로 상태가 계속 변경되서 무한 반복되는 걸 방지)\n\n  useEffect(() => {\n    fetch(\"http://localhost:4000/api/todo\").then(response => response.json()).then(data => setTodoList(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TODO LIST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), todoList.map(todo => {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: todo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: todo.done\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7ZUpC1+D6Ysi8SP5DYMHHJgkam0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","App","todoList","setTodoList","fetch","then","response","json","data","map","todo","text","done"],"sources":["/Users/jkkim/Documents/Hello-JK-World/practice-fetch/client/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\n// 서버에 데이터 요청\n\n// fetch 기본 제공 api\n// axios 라이브러리 사용\n\n// 서버주소를 알아야 함\n// 어떤 http method를 사용할지 알아야 됨\n\nfunction App() {\n\n  // 받은 데이터를 화면에 렌더하기 위한 작업\n  const [todoList, setTodoList] = useState(null);\n\n  // 컴포넌트가 최초 렌더링 될 때만 실행될 수 있도록 함 (데이터 fetch 반복으로 상태가 계속 변경되서 무한 반복되는 걸 방지)\n  useEffect(() => {\n    fetch(\"http://localhost:4000/api/todo\")\n    .then((response) => response.json())\n    .then((data) => setTodoList(data));\n  }, [])\n  \n  return (\n    <div className=\"App\">\n      <h1>TODO LIST</h1>\n        {todoList.map((todo) => {\n          <div>\n            <div>{todo.text}</div>\n            <div>{todo.done}</div>\n          </div>\n        })}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAEA;AAEA;AACA;AAEA;AACA;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,IAAD,CAAxC,CAHa,CAKb;;EACAD,SAAS,CAAC,MAAM;IACdK,KAAK,CAAC,gCAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,IAAD,IAAUL,WAAW,CAACK,IAAD,CAF3B;EAGD,CAJQ,EAIN,EAJM,CAAT;EAMA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEKN,QAAQ,CAACO,GAAT,CAAcC,IAAD,IAAU;MACtB;MAAA;QAAA,wBACE;UAAA,UAAMA,IAAI,CAACC;QAAX;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,UAAMD,IAAI,CAACE;QAAX;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IAID,CALA,CAFL;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GAvBQX,G;;KAAAA,G;AAyBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}